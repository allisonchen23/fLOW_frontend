{"version":3,"sources":["assets/svg/flow_logo.svg","assets/svg/dashboardimg.svg","assets/svg/drop.svg","assets/svg/downtrend.svg","assets/svg/uptrend.svg","graphdata/LineGraph.module.css","assets/jpeg/waterimage.jpg","firebase.js","graphdata/myLineGraph.js","pages/home.js","pages/tips.js","pages/about.js","nav/SideNav.jsx","nav/TopBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myLineChart","Chart","defaults","global","defaultFontFamily","legend","display","LineGraph","chartRef","React","createRef","buildChart","myChartRef","current","getContext","props","data","labels","average","destroy","graphHeight","canvas","height","gradientLine","createLinearGradient","addColorStop","type","datasets","label","fill","borderColor","backgroundColor","pointBackgroundColor","pointRadius","hitRadius","pointStrokeColor","plugins","zoom","pan","enabled","mode","rangeMin","x","y","rangeMax","onPan","chart","console","log","onPanComplete","options","responsive","maintainAspectRatio","tooltips","displayColors","scales","yAxes","scaleLabel","labelString","fontColor","ticks","padding","gridLines","borderDash","color","drawTicks","drawBorder","xAxes","this","className","classes","graphContainer","id","ref","Component","library","add","faHome","faSignal","faClock","faLightbulb","faQuestionCircle","faUserCircle","Welcome","Math","floor","random","getMsg","dayLabels","monthLabels","Home","filteredData","startDate","daily_sums","state","chartData","charDays","dayNames","i","checkDate","Date","checkDateUnix","getTime","endDate","setUTCFullYear","getUTCFullYear","setUTCMonth","getUTCMonth","setUTCDate","getDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","endDateUnix","getDay","getMonth","setDate","getUTCDate","setState","getWeeklyWaterUsage","startOfPrevWeek","gal_used","startDateUnix","weekly_usage","prev_gal_used","perc","toFixed","perc_difference","componentDidMount","lastDay","dataRef","database","on","snapshot","timestamp","vol","date","noon_timestamp","time_in_unix_ms","forEach","childSnapshot","key","child","val","setTime","lastSevenDays","trendingImage","src","uptrend","downtrend","Fragment","dbman","drop","container","faFileAlt","faTint","faWater","FactsMessage","TipsMessage","logo","Tips","icon","About","Side_Nav","href","class","to","faBell","Top_Bar","App","name","path","handler","basename","process","SideNav","TopBar","component","from","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.961a76b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flow_logo.134cada3.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboardimg.e16f80f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop.f3451433.svg\";","module.exports = __webpack_public_path__ + \"static/media/downtrend.2db833f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/uptrend.c9a9030e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"LineGraph_graphContainer__TE_fs\",\"chartjs-render-monitor\":\"LineGraph_chartjs-render-monitor___0Xwc\"};","module.exports = __webpack_public_path__ + \"static/media/waterimage.2fc0155a.jpg\";","import firebase from 'firebase';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyBKlHtX6_JuKxIEROcVcC0oUKwFbwj_UpI\",\r\n//   authDomain: \"react-50f71.firebaseapp.com\",\r\n//   databaseURL: \"https://react-50f71.firebaseio.com\",\r\n//   projectId: \"react-50f71\",\r\n//   storageBucket: \"react-50f71.appspot.com\",\r\n//   messagingSenderId: \"898138328086\",\r\n//   appId: \"1:898138328086:web:0bdb6a856278a46e02b937\",\r\n//   measurementId: \"G-D35GFWXVY5\"\r\n// };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBa97q4DWj7xsO4DWtFyEJQaSD4Cv-QcbA\",\r\n  authDomain: \"testproj-81eb3.firebaseapp.com\",\r\n  databaseURL: \"https://testproj-81eb3.firebaseio.com\",\r\n  projectId: \"testproj-81eb3\",\r\n  storageBucket: \"testproj-81eb3.appspot.com\",\r\n  messagingSenderId: \"326625281759\",\r\n  appId: \"1:326625281759:web:7dfdd060c65ab5ff604b6a\",\r\n  measurementId: \"G-VS469K15HM\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nimport classes from \"./LineGraph.module.css\";\r\nlet myLineChart;\r\n\r\n//--Chart Style Options--//\r\nChart.defaults.global.defaultFontFamily = \"'Open Sans', sans-serif\"\r\nChart.defaults.global.legend.display = false;\r\n//--Chart Style Options--//\r\n\r\n\r\nexport default class LineGraph extends Component {\r\n    chartRef = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        this.buildChart();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildChart();\r\n    }\r\n\r\n    buildChart = () => {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const { data, average, labels } = this.props;\r\n\r\n        if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\r\n        const {height: graphHeight} = myChartRef.canvas;\r\n\r\n        let gradientLine = myChartRef\r\n        .createLinearGradient(0, 0, 0, graphHeight);\r\n        gradientLine.addColorStop(0, \"rgb(151, 209, 244, .5)\");\r\n        gradientLine.addColorStop(0.5, \"rgb(151, 209, 244, .1)\");\r\n        gradientLine.addColorStop(1, \"rgb(151, 209, 244, 0)\");\r\n\r\n        myLineChart = new Chart(myChartRef, {\r\n            \r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"Volume\",\r\n                        data: data,\r\n                        fill: true,\r\n                        borderColor: \"#97D1F4\",\r\n                        backgroundColor: gradientLine,\r\n                        pointBackgroundColor: \"#97D1F4\",\r\n                        pointRadius: 3,\r\n                        hitRadius: 30,\r\n                        pointStrokeColor: \"#fff\"\r\n                    }\r\n                ]\r\n            },\r\n            plugins: {\r\n                zoom: {\r\n                    // Container for pan options\r\n                    pan: {\r\n                        // Boolean to enable panning\r\n                        enabled: true,\r\n            \r\n                        // Panning directions. Remove the appropriate direction to disable\r\n                        // Eg. 'y' would only allow panning in the y direction\r\n                        // A function that is called as the user is panning and returns the\r\n                        // available directions can also be used:\r\n                        //   mode: function({ chart }) {\r\n                        //     return 'xy';\r\n                        //   },\r\n                        mode: 'xy',\r\n            \r\n                        rangeMin: {\r\n                            // Format of min pan range depends on scale type\r\n                            x: null,\r\n                            y: null\r\n                        },\r\n                        rangeMax: {\r\n                            // Format of max pan range depends on scale type\r\n                            x: null,\r\n                            y: null\r\n                        },\r\n            \r\n                        // Function called while the user is panning\r\n                        onPan: function({chart}) { console.log(`I'm panning!!!`); },\r\n                        // Function called once panning is completed\r\n                        onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\r\n                    }\r\n                }\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    displayColors: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Volume (ml)',\r\n                        fontColor: '#d1d1d1',\r\n                      },\r\n                      ticks: {\r\n                        padding: 10,\r\n                        fontColor: '#d1d1d1'\r\n                      },\r\n                      gridLines: {\r\n                        display: false,\r\n                        borderDash: [8,4],\r\n                        color: '#eeeeee',\r\n                        drawTicks: false,\r\n                        drawBorder: false\r\n                      }\r\n\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            borderDash: [8,4],\r\n                            color: '#eeeeee',\r\n                            drawTicks: false,\r\n                            drawBorder: false                               \r\n                        },\r\n                        ticks: {\r\n                            padding: 10,\r\n                            fontColor: '#d1d1d1'\r\n                          }\r\n                    }]\r\n                  },\r\n\r\n            },\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            \r\n            <div className={classes.graphContainer}>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './home.css';\r\nimport './globalstyle.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\nimport firebase from \"../firebase\"\r\nimport dbman from '../assets/svg/dashboardimg.svg';\r\nimport drop from '../assets/svg/drop.svg';\r\nimport downtrend from '../assets/svg/downtrend.svg';\r\nimport uptrend from '../assets/svg/uptrend.svg';\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport LineGraph from \"../graphdata/myLineGraph.js\";\r\nimport classes from \"./home.css\";\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nclass Welcome extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Howdy!', \"Welcome to fLOW!\", \"Save Water!\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n  \r\n  render() {\r\n    return <h2>{this.getMsg()}</h2>;\r\n  }\r\n}\r\n\r\nlet dayLabels = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nlet monthLabels = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      daily_sums: {}, //timestamp:sum\r\n      filteredData: [],\r\n      labels: [], //dayLabels\r\n      weekly_usage: 0,\r\n      perc_difference: 0\r\n    }\r\n  }\r\n\r\n  filteredData = (startDate) => {\r\n    let daily_sums = this.state.daily_sums;\r\n    let chartData = [];\r\n    let charDays = [];\r\n    let dayNames = dayLabels;\r\n    let i = 0;\r\n    let checkDate = new Date(startDate);\r\n    let checkDateUnix = checkDate.getTime()\r\n    let endDate = new Date(); \r\n    endDate.setUTCFullYear(startDate.getUTCFullYear());\r\n    endDate.setUTCMonth(startDate.getUTCMonth());\r\n    endDate.setUTCDate(startDate.getDate()+6);\r\n    endDate.setUTCHours(12);\r\n    endDate.setUTCMinutes(0);\r\n    endDate.setUTCSeconds(0);\r\n    endDate.setUTCMilliseconds(0);\r\n    let endDateUnix = endDate.getTime();\r\n    while(checkDateUnix <= endDateUnix) {\r\n        charDays[i] = dayNames[checkDate.getDay()] + \", \" + monthLabels[checkDate.getMonth()] + \" \" + checkDate.getDate();// + \", \" + checkDate.getFullYear();\r\n\r\n        if (checkDateUnix in daily_sums) {\r\n            chartData[i] = daily_sums[checkDateUnix];\r\n        }\r\n        else {\r\n            chartData[i] = 0;\r\n        }\r\n        i++;\r\n        checkDate.setDate(checkDate.getUTCDate() + 1);\r\n        checkDateUnix = checkDate.getTime();\r\n      }\r\n    this.setState({\r\n        filteredData: chartData,\r\n        labels: charDays\r\n    })\r\n  }\r\n\r\n  getWeeklyWaterUsage = (startDate, endDate) =>\r\n  {\r\n    let startOfPrevWeek =  new Date();\r\n    startOfPrevWeek.setUTCFullYear(startDate.getUTCFullYear());\r\n    startOfPrevWeek.setUTCMonth(startDate.getUTCMonth());\r\n    startOfPrevWeek.setUTCDate(startDate.getUTCDate()-7);\r\n    startOfPrevWeek.setUTCHours(12);\r\n    startOfPrevWeek.setUTCMinutes(0);\r\n    startOfPrevWeek.setUTCSeconds(0);\r\n    startOfPrevWeek.setUTCMilliseconds(0);\r\n\r\n    let daily_sums = this.state.daily_sums;\r\n\r\n    let gal_used = 0;\r\n    let startDateUnix = startDate.getTime();\r\n    let endDateUnix = endDate.getTime();\r\n\r\n    while(startDateUnix <= endDateUnix) { \r\n      if (startDateUnix in daily_sums)\r\n        gal_used += daily_sums[startDateUnix];\r\n      \r\n      startDate.setDate(startDate.getUTCDate() + 1);\r\n      startDateUnix = startDate.getTime();\r\n    }\r\n\r\n    this.setState({weekly_usage: gal_used});  \r\n    \r\n    endDate.setDate(startOfPrevWeek.getUTCDate() + 6);\r\n\r\n    startDateUnix = startOfPrevWeek.getTime();\r\n    endDateUnix = endDate.getTime();\r\n\r\n    let prev_gal_used = 0;;\r\n\r\n    while(startDateUnix <= endDateUnix) { \r\n      if (startDateUnix in daily_sums)\r\n        prev_gal_used += daily_sums[startDateUnix];      \r\n      startOfPrevWeek.setDate(startOfPrevWeek.getUTCDate() + 1);\r\n      startDateUnix = startOfPrevWeek.getTime();\r\n    }\r\n    let perc = gal_used/prev_gal_used*100;\r\n    perc = perc.toFixed(2)\r\n    this.setState({perc_difference: perc});\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let gal_used = 0;\r\n    let lastDay = new Date(0);\r\n\r\n    let db = firebase.database();\r\n    let dataRef = db.ref('water_data');\r\n    let daily_sums = this.state.daily_sums;\r\n\r\n    dataRef.on('value', snapshot => {\r\n      const data = snapshot; //testing    \r\n      let timestamp;\r\n      let vol;\r\n      let date;\r\n      let noon_timestamp;\r\n      let time_in_unix_ms;\r\n      //each cxhild snapshot is an entry from arduino\r\n      data.forEach(childSnapshot => {\r\n        timestamp = childSnapshot.key*1000; //s to ms\r\n        vol = childSnapshot.child('volume').val();\r\n        gal_used += vol;\r\n        date = new Date();\r\n        date.setTime(timestamp);\r\n\r\n        //Month: starting from 0 (Jan) -> ex. 4 is May\r\n        //new Date set the time to PST -> 4 am PST -> 12 pm UTC\r\n        noon_timestamp = new Date();\r\n        noon_timestamp.setUTCFullYear(date.getUTCFullYear());\r\n        noon_timestamp.setUTCMonth(date.getUTCMonth());\r\n        noon_timestamp.setUTCDate(date.getUTCDate());\r\n        noon_timestamp.setUTCHours(12);\r\n        noon_timestamp.setUTCMinutes(0);\r\n        noon_timestamp.setUTCSeconds(0);\r\n        noon_timestamp.setUTCMilliseconds(0);\r\n\r\n        if(noon_timestamp > lastDay)\r\n          lastDay = noon_timestamp;\r\n\r\n        time_in_unix_ms = noon_timestamp.getTime()\r\n\r\n        if (time_in_unix_ms in daily_sums) {\r\n          daily_sums[time_in_unix_ms] += vol;\r\n        } else {\r\n          daily_sums[time_in_unix_ms] = vol;\r\n        }\r\n      })\r\n\r\n      let lastSevenDays =  new Date();\r\n      lastSevenDays.setUTCFullYear(lastDay.getUTCFullYear());\r\n      lastSevenDays.setUTCMonth(lastDay.getUTCMonth());\r\n      lastSevenDays.setUTCDate(lastDay.getUTCDate()-6);\r\n      lastSevenDays.setUTCHours(12);\r\n      lastSevenDays.setUTCMinutes(0);\r\n      lastSevenDays.setUTCSeconds(0);\r\n      lastSevenDays.setUTCMilliseconds(0);\r\n\r\n      this.filteredData(lastSevenDays);\r\n      this.getWeeklyWaterUsage(lastSevenDays, lastDay);    \r\n    })\r\n    \r\n  }\r\n  render() {\r\n    const { filteredData, labels } = this.state;\r\n    \r\n    var trendingImage;\r\n    if (this.state.perc_difference > 0)\r\n      trendingImage = <img className='dropimg' src={uptrend}/>;\r\n    else \r\n      trendingImage = <img className='dropimg' src={downtrend}/>;\r\n\r\n    return (      \r\n        <React.Fragment>          \r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                <div className=\"body_box long\" id=\"message_box\">\r\n                  <div className=\"box_content\">\r\n                    <Welcome />\r\n                      <img className=\"dbimg\" src={dbman}/>\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box regular\">\r\n                  <div className=\"box_content stat_box\">\r\n                    <img className=\"dropimg\" src={drop}/> \r\n                    <div className=\"data_text\">\r\n                      <b>{this.state.weekly_usage} <div id=\"gal\">gal.</div></b> \r\n                      <p className=\"data_text_bot\">Water Used This Week</p>\r\n                    </div>\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box regular\">\r\n                  <div className=\"box_content stat_box\">\r\n                    {trendingImage}\r\n                   {/* <img className='dropimg' src={downtrend}/>   */}\r\n\r\n                    <div className=\"data_text\">\r\n                      <b>{this.state.perc_difference} <div id=\"gal\">%</div></b> \r\n                      <p className=\"data_text_bot\">From Last Week</p>\r\n                    </div>\r\n                  </div>    \r\n                </div> \r\n                <div className=\"body_box full_width double_height\">\r\n                  <div id=\"graph_wrap\">\r\n                    <div id=\"graph_htmlcontainer\">\r\n                    <div className={classes.container}>\r\n                      <header>\r\n                        <h2>Your Usage History</h2>\r\n                      </header>\r\n                      <LineGraph\r\n                        data={filteredData}\r\n                        labels={labels} />\r\n                    </div>\r\n\r\n                    </div>\r\n                  </div>  \r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './tips.css';\r\nimport './globalstyle.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\nimport dbman from '../assets/svg/dashboardimg.svg';\r\nimport drop from '../assets/svg/drop.svg';\r\nimport waterimage from '../assets/jpeg/waterimage.jpg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faFileAlt, faTint, faWater} from '@fortawesome/free-solid-svg-icons'\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faFileAlt, faTint, faWater);\r\n\r\n// Random welcome message\r\n\r\nclass Welcome extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Each person uses about 80-100 gallons of water per day.', \"Plastic bottles take ~3 times as much water to produce than they can actually hold.\", \"What can you do to save our planet?\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n\r\n  render() {\r\n    return <h3 className=\"box_text blue_box_text\">{this.getMsg()}</h3>;\r\n    \r\n  }\r\n}\r\n\r\nclass FactsMessage extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Showering, bathing and using the toilet account for about two-thirds of the average family’s water usage.', \"A dripping faucet can lead to over 300 liters of water waste a month. That’s around 10 liters a day!\", \"In Los Angeles, around 54% of a single family’s water usage comes from landscaping and outdoor use.\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n\r\n  render() {\r\n    return <h3 className=\"box_text blue_box_text\">{this.getMsg()}</h3>;\r\n  }\r\n}\r\n\r\nclass TipsMessage extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Cutting 4 minutes from your shower can save 30 gallons of water.', \"Cutting 4 minutes from your shower can save 30 gallons of water.\", \"Cutting 4 minutes from your shower can save 30 gallons of water.\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n\r\n  render() {\r\n    return <h2 className=\"box_text white_box_text\">{this.getMsg()}</h2>;\r\n  }\r\n}\r\n\r\nconsole.log(logo);\r\n\r\nclass Tips extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                <div className=\"body_box_t long2_t triple_height_t\">\r\n                  <div className=\"box_content_t\" id=\"first_image\">\r\n                    {/* <img className=\"dropimg\" src={drop}/>              */}\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t long2_t triple_height_t\" id=\"message_box_t\">\r\n                  <div className=\"box_content_t\">\r\n                    <Welcome />\r\n                    <FontAwesomeIcon icon=\"water\" className=\"water_icon\"/>\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t full_width_t double_height_t\" id=\"message_box3_t\">\r\n                  <div className=\"box_content_t\">\r\n                  {/* <h2 className=\"box_text white_box_text\"> Cutting 4 minutes from your shower can save 30 gallons of water. </h2> */}\r\n                  <FontAwesomeIcon icon=\"lightbulb\" className=\"lightbulb_icon\"/>\r\n                  <TipsMessage />\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t long3_t triple_height_t\" id=\"message_box5_t\">\r\n                  <div className=\"box_content_t icon_box\">\r\n                    <FontAwesomeIcon icon=\"tint\" className=\"fact_icon\"/>\r\n                    {/* <img className=\"dropimg\" src={drop}/>             */}\r\n                    <FactsMessage />\r\n                    {/* <h3 className=\"box_text blue_box_text\">Showering, bathing and using the toilet account for about two-thirds of the average family’s water usage.</h3>  */}\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t triple_height_t\" id=\"second_image\">\r\n                  <div className=\"box_content_t\">\r\n                  <h2 className=\"box_text white_box_text\"></h2>\r\n                  </div>  \r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tips;","//Home Page\r\nimport React, { Component} from 'react';\r\n\r\nimport './about.css';\r\nimport './globalstyle.css';\r\n\r\nclass About extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","//Home Page\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass Side_Nav extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"nav_wrap\">\r\n            <div className=\"logo_wrap\">\r\n              <a href=\"#top\"><img src={logo}/></a>\r\n            </div>\r\n            <nav>\r\n              <ul className=\"nav_list\">\r\n                <li className=\"nav_item\">\r\n                  <Link class=\"nav_square\" to=\"/pages/home.js\">\r\n                    <FontAwesomeIcon icon=\"home\" className=\"nav_icon\"/>\r\n                  </Link> \r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/pages/tips.js\">\r\n                    <FontAwesomeIcon icon=\"lightbulb\" className=\"nav_icon\"/>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/pages/about.js\">\r\n                    <FontAwesomeIcon icon=\"question-circle\" className=\"nav_icon\"/>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            </div>  \r\n\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Side_Nav;","//Home Page\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell);\r\n\r\nconsole.log(logo);\r\n\r\nclass Top_Bar extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <nav className = \"top_bar\">\r\n          \r\n          <ul className=\"top_list\">\r\n            <li className=\"top_item\">\r\n                  <a> AC </a>\r\n            </li>\r\n\r\n                \r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"user-circle\" className=\"top_icons\"/></Link>\r\n                </li>\r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"bell\" className=\"top_iconsa\"/></Link>\r\n                </li>\r\n              \r\n          </ul>\r\n        </nav>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top_Bar;","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './App.css';\r\nimport logo from './assets/svg/flow_logo.svg';\r\n// Connect pages\r\nimport Home from \"./pages/home.js\"\r\nimport Tips from \"./pages/tips.js\"\r\nimport About from \"./pages/about.js\"\r\nimport SideNav from \"./nav/SideNav.jsx\"\r\nimport TopBar from \"./nav/TopBar.jsx\"\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass App extends Component { \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BrowserRouter name=\"app\" path=\"/\" handler={App} basename={process.env.PUBLIC_URL}>\r\n\r\n         <SideNav/>\r\n         <TopBar/>\r\n       \r\n          <Switch>\r\n            <Route path = \"/pages/home.js\" component={Home} />\r\n            <Route path = \"/pages/tips.js\"  component={Tips} />\r\n            <Route path = \"/pages/about.js\"  component={About} />\r\n          </Switch>\r\n          <Redirect from=\"/\"  to=\"/pages/home.js\" />\r\n\r\n        </BrowserRouter>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './pages/home.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}