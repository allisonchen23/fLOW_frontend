{"version":3,"sources":["assets/svg/flow_logo.svg","pages/home.js","firebase.js","pages/data.js","pages/about.js","nav/SideNav.jsx","nav/TopBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","faHome","faSignal","faClock","faLightbulb","faQuestionCircle","faUserCircle","console","log","logo","Home","Fragment","className","id","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Data","props","increment_temp","past_temp","state","temp","setState","componentDidMount","database","enableLogging","curtemp","db","tempRef","ref","imageRef","nameRef","on","snapshot","val","db_name","child","name","name2","this","About","Side_Nav","href","src","class","to","icon","faBell","Top_Bar","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa332b47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flow_logo.134cada3.svg\";","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './home.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass Home extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                <div className=\"body_box long\" id=\"message_box\">\r\n                  <div className=\"box_content\">\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box\">\r\n                  <div className=\"box_content\">\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box\">\r\n                  <div className=\"box_content\">\r\n\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box full_width double_height\">\r\n                  <div className=\"box_content\">\r\n                  </div>  \r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import firebase from 'firebase';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyBKlHtX6_JuKxIEROcVcC0oUKwFbwj_UpI\",\r\n//   authDomain: \"react-50f71.firebaseapp.com\",\r\n//   databaseURL: \"https://react-50f71.firebaseio.com\",\r\n//   projectId: \"react-50f71\",\r\n//   storageBucket: \"react-50f71.appspot.com\",\r\n//   messagingSenderId: \"898138328086\",\r\n//   appId: \"1:898138328086:web:0bdb6a856278a46e02b937\",\r\n//   measurementId: \"G-D35GFWXVY5\"\r\n// };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBa97q4DWj7xsO4DWtFyEJQaSD4Cv-QcbA\",\r\n  authDomain: \"testproj-81eb3.firebaseapp.com\",\r\n  databaseURL: \"https://testproj-81eb3.firebaseio.com\",\r\n  projectId: \"testproj-81eb3\",\r\n  storageBucket: \"testproj-81eb3.appspot.com\",\r\n  messagingSenderId: \"326625281759\",\r\n  appId: \"1:326625281759:web:7dfdd060c65ab5ff604b6a\",\r\n  measurementId: \"G-VS469K15HM\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","//Data & Graph Page\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nimport firebase from '../firebase.js';\r\n\r\nimport './data.css';\r\n\r\nclass Data extends Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          temp: \"0\",\r\n          name: \"\",\r\n          name2: \"\",\r\n        };\r\n      }\r\n    \r\n      //lifecylce function of Components\r\n      //called only once \r\n      increment_temp = () => {\r\n        var past_temp = this.state.temp;\r\n        this.setState({ temp: past_temp + 1 });\r\n      }\r\n      componentDidMount = () => {\r\n        //var userID = firebase.auth().currentUser.uid;\r\n        firebase.database.enableLogging(true);\r\n        let db = firebase.database();\r\n        var curtemp;\r\n        let tempRef = db.ref('temp'); //\r\n        let imageRef = db.ref('image');\r\n        let nameRef = db.ref('image/name');\r\n    \r\n    \r\n    // if speed the database was more of a tree like the following:\r\n        // temp:\r\n        //   humidity:\r\n        //   airspeed:\r\n        // access humidity from .ref('temp/humidity')\r\n        // then access value of humidity with speed.humidity\r\n        //these are called listneners, run asynchronously\r\n        tempRef.on('value', (snapshot) => {\r\n          curtemp = snapshot.val();\r\n          this.setState({ temp: curtemp });\r\n        });\r\n        imageRef.on('value', snapshot => {\r\n          let db_name= snapshot.child('name').val();\r\n          this.setState({name: db_name});\r\n        });\r\n        nameRef.on('value', snapshot => {\r\n          this.setState({name2: snapshot.val()});\r\n        });\r\n    \r\n    \r\n      }\r\n      \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <header className=\"data\">\r\n            <p>From database: {this.state.temp}</p>\r\n            <p>Image/Name: {this.state.name}</p>\r\n            <p>should be same value as above: {this.state.name2}</p>\r\n          </header>\r\n\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Data;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './about.css';\r\n\r\nclass About extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <header className=\"App-header\">\r\n            <title>\r\n              About Us:\r\n            </title>\r\n          </header>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass Side_Nav extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"nav_wrap\">\r\n            <div className=\"logo_wrap\">\r\n              <a href=\"#top\"><img src={logo}/></a>\r\n            </div>\r\n            <nav>\r\n              <ul className=\"nav_list\">\r\n                <li className=\"nav_item\">\r\n                  <Link class=\"nav_square\" to=\"/pages/home.js\">\r\n                    <div className=\"\">\r\n                      <FontAwesomeIcon icon=\"home\" className=\"nav_icon\"/>\r\n                    </div>\r\n                  </Link> \r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/\">\r\n                    <div className=\"\">\r\n                      <FontAwesomeIcon icon=\"lightbulb\" className=\"nav_icon\"/>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/\">\r\n                      <div className=\"\">\r\n                        <FontAwesomeIcon icon=\"question-circle\" className=\"nav_icon\"/>\r\n                      </div>\r\n                    </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            </div>  \r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Side_Nav;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell);\r\n\r\nconsole.log(logo);\r\n\r\nclass Top_Bar extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <nav className = \"top_bar\">\r\n          \r\n          <ul className=\"top_list\">\r\n            <li className=\"top_item\">\r\n                  <a> AC </a>\r\n            </li>\r\n\r\n                \r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"user-circle\" className=\"top_icons\"/></Link>\r\n                </li>\r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"bell\" className=\"top_iconsa\"/></Link>\r\n                </li>\r\n              \r\n          </ul>\r\n        </nav>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top_Bar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport logo from './assets/svg/flow_logo.svg';\r\n// Connect pages\r\nimport Home from \"./pages/home.js\"\r\nimport Data from \"./pages/data.js\"\r\nimport About from \"./pages/about.js\"\r\nimport Side_Nav from \"./nav/SideNav.jsx\"\r\nimport Top_Bar from \"./nav/TopBar.jsx\"\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass App extends Component {\r\n\r\n \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BrowserRouter>\r\n\r\n         <Side_Nav/>\r\n         <Top_Bar/>\r\n       \r\n          <Switch>\r\n            <Route path = \"/pages/home.js\" exact component={Home} />\r\n            <Route path = \"/pages/data.js\" exact component={Data} />\r\n            <Route path = \"/pages/about.js\" exact component={About} />\r\n          </Switch>\r\n          </BrowserRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}