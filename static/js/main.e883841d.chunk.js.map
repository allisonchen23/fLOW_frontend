{"version":3,"sources":["assets/svg/flow_logo.svg","assets/svg/dashboardimg.svg","assets/svg/drop.svg","assets/svg/downtrend.svg","assets/svg/uptrend.svg","graphdata/LineGraph.module.css","assets/svg/Ac.svg","assets/jpeg/waterimage.jpg","firebase.js","graphdata/myLineGraph.js","pages/home.js","pages/tips.js","pages/about.js","nav/SideNav.jsx","nav/TopBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myLineChart","Chart","defaults","global","defaultFontFamily","legend","display","LineGraph","chartRef","React","createRef","buildChart","myChartRef","current","getContext","props","data","labels","average","destroy","graphHeight","canvas","height","gradientLine","createLinearGradient","addColorStop","type","datasets","label","fill","borderColor","backgroundColor","pointBackgroundColor","pointRadius","hitRadius","pointStrokeColor","plugins","zoom","pan","enabled","mode","rangeMin","x","y","rangeMax","onPan","chart","console","log","onPanComplete","options","responsive","maintainAspectRatio","tooltips","displayColors","scales","yAxes","scaleLabel","labelString","fontColor","ticks","padding","gridLines","borderDash","color","drawTicks","drawBorder","xAxes","this","className","classes","graphContainer","id","ref","Component","library","add","faHome","faSignal","faClock","faLightbulb","faQuestionCircle","faUserCircle","Welcome","Math","floor","random","getMsg","dayLabels","monthLabels","Home","filteredData","startDate","daily_sums","chartData","charDays","dayNames","i","checkDate","Date","checkDateUnix","getTime","endDate","setUTCFullYear","getUTCFullYear","setUTCMonth","getUTCMonth","setUTCDate","getDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","endDateUnix","getDay","getMonth","toFixed","setDate","getUTCDate","setState","getWeeklyWaterUsage","startOfPrevWeek","gal_used","startDateUnix","weekly_usage","prev_gal_used","perc","perc_difference","componentDidMount","lastDay","dataRef","database","on","snapshot","timestamp","vol","date","noon_timestamp","time_in_unix_ms","forEach","childSnapshot","key","child","val","setTime","lastSevenDays","state","sign","trendingImage","src","uptrend","downtrend","Fragment","dbman","drop","container","faFileAlt","faTint","faWater","FactsMessage","TipsMessage","logo","Tips","icon","DaysOfWeek","Months","About","onSelectChange","opt","ids","length","selectedDevices","submitButton","idString","getData","parseDevicesSelected","replace","selectOptions","getAvailableUserIDs","xhr","XMLHttpRequest","addEventListener","uniqueIds","JSON","parse","responseText","push","value","open","send","response","keys","Object","parseInt","startDay","startDateString","endDateString","slice","values","alert","isMulti","onChange","onClick","faUsers","Side_Nav","href","to","faBell","Top_Bar","prof","alt","App","name","path","handler","basename","process","SideNav","TopBar","exact","component","from","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e883841d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flow_logo.2d7e1bda.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboardimg.cfb6bfc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop.6b48d098.svg\";","module.exports = __webpack_public_path__ + \"static/media/downtrend.58f7c159.svg\";","module.exports = __webpack_public_path__ + \"static/media/uptrend.1a723925.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"LineGraph_graphContainer__1GJUC\",\"chartjs-render-monitor\":\"LineGraph_chartjs-render-monitor__1lZzI\"};","module.exports = __webpack_public_path__ + \"static/media/Ac.836d2017.svg\";","module.exports = __webpack_public_path__ + \"static/media/waterimage.2fc0155a.jpg\";","import firebase from 'firebase';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyBKlHtX6_JuKxIEROcVcC0oUKwFbwj_UpI\",\n//   authDomain: \"react-50f71.firebaseapp.com\",\n//   databaseURL: \"https://react-50f71.firebaseio.com\",\n//   projectId: \"react-50f71\",\n//   storageBucket: \"react-50f71.appspot.com\",\n//   messagingSenderId: \"898138328086\",\n//   appId: \"1:898138328086:web:0bdb6a856278a46e02b937\",\n//   measurementId: \"G-D35GFWXVY5\"\n// };\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBa97q4DWj7xsO4DWtFyEJQaSD4Cv-QcbA\",\n  authDomain: \"testproj-81eb3.firebaseapp.com\",\n  databaseURL: \"https://testproj-81eb3.firebaseio.com\",\n  projectId: \"testproj-81eb3\",\n  storageBucket: \"testproj-81eb3.appspot.com\",\n  messagingSenderId: \"326625281759\",\n  appId: \"1:326625281759:web:7dfdd060c65ab5ff604b6a\",\n  measurementId: \"G-VS469K15HM\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react'\nimport Chart from \"chart.js\";\nimport classes from \"./LineGraph.module.css\";\nlet myLineChart;\n\n//--Chart Style Options--//\nChart.defaults.global.defaultFontFamily = \"'Open Sans', sans-serif\"\nChart.defaults.global.legend.display = false;\n//--Chart Style Options--//\n\n\nexport default class LineGraph extends Component {\n    chartRef = React.createRef();\n    \n    componentDidMount() {\n        this.buildChart();\n    }\n\n    componentDidUpdate() {\n        this.buildChart();\n    }\n\n    buildChart = () => {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        const { data, average, labels } = this.props;\n\n        if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\n        const {height: graphHeight} = myChartRef.canvas;\n\n        let gradientLine = myChartRef\n        .createLinearGradient(0, 0, 0, graphHeight);\n        gradientLine.addColorStop(0, \"rgb(151, 209, 244, .5)\");\n        gradientLine.addColorStop(0.5, \"rgb(151, 209, 244, .1)\");\n        gradientLine.addColorStop(1, \"rgb(151, 209, 244, 0)\");\n\n        myLineChart = new Chart(myChartRef, {\n            \n            type: \"line\",\n            data: {\n                //Bring in data\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"Volume\",\n                        data: data,\n                        fill: true,\n                        borderColor: \"#97D1F4\",\n                        backgroundColor: gradientLine,\n                        pointBackgroundColor: \"#97D1F4\",\n                        pointRadius: 3,\n                        hitRadius: 30,\n                        pointStrokeColor: \"#fff\"\n                    }\n                ]\n            },\n            plugins: {\n                zoom: {\n                    // Container for pan options\n                    pan: {\n                        // Boolean to enable panning\n                        enabled: true,\n            \n                        // Panning directions. Remove the appropriate direction to disable\n                        // Eg. 'y' would only allow panning in the y direction\n                        // A function that is called as the user is panning and returns the\n                        // available directions can also be used:\n                        //   mode: function({ chart }) {\n                        //     return 'xy';\n                        //   },\n                        mode: 'xy',\n            \n                        rangeMin: {\n                            // Format of min pan range depends on scale type\n                            x: null,\n                            y: null\n                        },\n                        rangeMax: {\n                            // Format of max pan range depends on scale type\n                            x: null,\n                            y: null\n                        },\n            \n                        // Function called while the user is panning\n                        onPan: function({chart}) { console.log(`I'm panning!!!`); },\n                        // Function called once panning is completed\n                        onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\n                    }\n                }\n            },\n            options: {\n                //Customize chart options\n                responsive: true,\n                maintainAspectRatio: false,\n                tooltips: {\n                    displayColors: false,\n                },\n                scales: {\n                    yAxes: [{\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Volume (L)',\n                        fontColor: '#666666',\n                      },\n                      ticks: {\n                        padding: 10,\n                        fontColor: '#666666'\n                      },\n                      gridLines: {\n                        display: false,\n                        borderDash: [8,4],\n                        color: '#666666',\n                        drawTicks: false,\n                        drawBorder: false\n                      }\n\n                    }],\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Day of Week',\n                            fontColor: '#666666',\n                          },\n                        gridLines: {\n                            borderDash: [8,4],\n                            color: '#eeeeee',\n                            drawTicks: false,\n                            drawBorder: false                               \n                        },\n                        ticks: {\n                            padding: 10,\n                            fontColor: '#666666'\n                          }\n                    }]\n                  },\n\n            },\n            \n        });\n\n    }\n\n    render() {\n\n\n        return (\n            \n            <div className={classes.graphContainer}>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport './home.css';\nimport './globalstyle.css';\nimport logo from '../assets/svg/flow_logo.svg';\nimport firebase from \"../firebase\"\nimport dbman from '../assets/svg/dashboardimg.svg';\nimport drop from '../assets/svg/drop.svg';\nimport downtrend from '../assets/svg/downtrend.svg';\nimport uptrend from '../assets/svg/uptrend.svg';\n\n// Imports icons\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport LineGraph from \"../graphdata/myLineGraph.js\";\nimport classes from \"./home.css\";\n\n// Adds icons\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\n\nclass Welcome extends Component {\n\n  getMsg() {\n    var msg = ['Howdy!', \"Welcome to fLOW!\", \"Save Water!\"];\n    var i = Math.floor(Math.random() * Math.floor(3));\n    return msg[i];\n  }\n  \n  render() {\n    return <h2>{this.getMsg()}</h2>;\n  }\n}\n\nlet dayLabels = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nlet monthLabels = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      daily_sums: {}, //timestamp:sum\n      filteredData: [],\n      labels: [], //dayLabels\n      weekly_usage: 0,\n      perc_difference: 0,\n      sign: []\n    }\n  }\n\n  //takes daily sums and stores a week's worth of data from startDate\n  filteredData = (startDate, daily_sums) => {\n    let chartData = [];\n    let charDays = [];\n    let dayNames = dayLabels;\n    let i = 0;\n    let checkDate = new Date(startDate);\n    let checkDateUnix = checkDate.getTime()\n    let endDate = new Date(); \n    endDate.setUTCFullYear(startDate.getUTCFullYear());\n    endDate.setUTCMonth(startDate.getUTCMonth());\n    endDate.setUTCDate(startDate.getDate()+6);\n    endDate.setUTCHours(12);\n    endDate.setUTCMinutes(0);\n    endDate.setUTCSeconds(0);\n    endDate.setUTCMilliseconds(0);\n    let endDateUnix = endDate.getTime();\n    while(checkDateUnix <= endDateUnix) {\n        charDays[i] = dayNames[checkDate.getDay()] + \", \" + monthLabels[checkDate.getMonth()] + \" \" + checkDate.getDate();// + \", \" + checkDate.getFullYear();\n        if (checkDateUnix in daily_sums) {\n            chartData[i] = daily_sums[checkDateUnix].toFixed(2);\n        }\n        else {\n            chartData[i] = 0;\n        }\n        i++;\n        checkDate.setDate(checkDate.getUTCDate() + 1);\n        // for some reason when you just do day + 1, sometimes it makes the time off by an hour\n        // this corrects for that\n        checkDate.setUTCHours(12,0,0);\n        checkDateUnix = checkDate.getTime();\n      }\n    this.setState({\n        filteredData: chartData,\n        labels: charDays\n    })\n  }\n\n  getWeeklyWaterUsage = (startDate, endDate, daily_sums) =>\n  {\n    let startOfPrevWeek =  new Date();\n    startOfPrevWeek.setUTCFullYear(startDate.getUTCFullYear());\n    startOfPrevWeek.setUTCMonth(startDate.getUTCMonth());\n    startOfPrevWeek.setUTCDate(startDate.getUTCDate()-7);\n    startOfPrevWeek.setUTCHours(12);\n    startOfPrevWeek.setUTCMinutes(0);\n    startOfPrevWeek.setUTCSeconds(0);\n    startOfPrevWeek.setUTCMilliseconds(0);\n\n    //let daily_sums = this.state.daily_sums;\n\n    let gal_used = 0;\n    let startDateUnix = startDate.getTime();\n    let endDateUnix = endDate.getTime();\n    while(startDateUnix <= endDateUnix) { \n      if (startDateUnix in daily_sums)\n        gal_used += daily_sums[startDateUnix];\n      \n      startDate.setDate(startDate.getUTCDate() + 1);\n      startDateUnix = startDate.getTime();\n    }\n    gal_used = gal_used.toFixed(2);\n    this.setState({weekly_usage: gal_used});  \n    \n    endDate.setDate(startOfPrevWeek.getUTCDate() + 6);\n\n    startDateUnix = startOfPrevWeek.getTime();\n    endDateUnix = endDate.getTime();\n\n    let prev_gal_used = 0;;\n\n    while(startDateUnix <= endDateUnix) {\n      if (startDateUnix in daily_sums)\n        prev_gal_used += daily_sums[startDateUnix];      \n      startOfPrevWeek.setDate(startOfPrevWeek.getUTCDate() + 1);\n      startDateUnix = startOfPrevWeek.getTime();\n    }\n    let perc = gal_used/prev_gal_used*100;\n    perc = perc.toFixed(2);\n    this.setState({perc_difference: perc});\n  }\n\n  componentDidMount = () => {\n    let gal_used = 0;\n    let lastDay = new Date(0);\n\n    let db = firebase.database();\n    let dataRef = db.ref('water_data');\n    let daily_sums = {};//this.state.daily_sums;\n\n    // use the firebase to sum up entries for sums for every day.\n    dataRef.on('value', snapshot => {\n      daily_sums = {}; //reset daily_sums otherwise when you add data but don't refresh the page, it just adds existing data again\n      const data = snapshot; //testing    \n      let timestamp;\n      let vol;\n      let date;\n      let noon_timestamp;\n      let time_in_unix_ms;\n      //each cxhild snapshot is an entry from arduino\n      data.forEach(childSnapshot => {\n        timestamp = childSnapshot.key*1000; //s to ms\n        vol = childSnapshot.child('volume').val();\n        gal_used += vol;\n        date = new Date();\n        date.setTime(timestamp);\n\n        //Month: starting from 0 (Jan) -> ex. 4 is May\n        //new Date set the time to PST -> 4 am PST -> 12 pm UTC\n        noon_timestamp = new Date();\n        noon_timestamp.setUTCFullYear(date.getUTCFullYear());\n        noon_timestamp.setUTCMonth(date.getUTCMonth());\n        noon_timestamp.setUTCDate(date.getUTCDate());\n        noon_timestamp.setUTCHours(12);\n        noon_timestamp.setUTCMinutes(0);\n        noon_timestamp.setUTCSeconds(0);\n        noon_timestamp.setUTCMilliseconds(0);\n\n        if(noon_timestamp > lastDay)\n          lastDay = noon_timestamp;\n\n        time_in_unix_ms = noon_timestamp.getTime()\n\n        if (time_in_unix_ms in daily_sums) {\n          daily_sums[time_in_unix_ms] += vol;\n        } else {\n          daily_sums[time_in_unix_ms] = vol;\n        }\n      })\n      let lastSevenDays =  new Date();\n      lastSevenDays.setUTCFullYear(lastDay.getUTCFullYear());\n      lastSevenDays.setUTCMonth(lastDay.getUTCMonth());\n      lastSevenDays.setUTCDate(lastDay.getUTCDate()-6);\n      lastSevenDays.setUTCHours(12);\n      lastSevenDays.setUTCMinutes(0);\n      lastSevenDays.setUTCSeconds(0);\n      lastSevenDays.setUTCMilliseconds(0);\n\n      this.filteredData(lastSevenDays, daily_sums);\n      this.getWeeklyWaterUsage(lastSevenDays, lastDay, daily_sums);    \n    })\n    \n  }\n  render() {\n    const { filteredData, labels } = this.state;\n\n    var trendingImage;\n\n    if (this.state.perc_difference > 0) {\n      trendingImage = <img className='dropimg' src={uptrend}/>;\n      this.sign = <b>+</b>;\n    }\n    else {\n      trendingImage = <img className='dropimg' src={downtrend}/>;\n      this.sign = <b>-</b>;\n     }\n    return (      \n        <React.Fragment>          \n          <div className=\"body\">\n            <div className=\"body_wrap\">\n              <div className=\"body_container\">\n                <div className=\"body_box long\" id=\"message_box\">\n                  <div className=\"box_content\">\n                    <Welcome />\n                      <img className=\"dbimg\" src={dbman}/>\n                  </div>  \n                </div> \n                <div className=\"body_box regular\">\n                  <div className=\"box_content stat_box\">\n                    <img className=\"dropimg\" src={drop}/> \n                    <div className=\"data_text\">\n                      <b>{this.state.weekly_usage} <div id=\"gal\">liters.</div></b> \n                      <p className=\"data_text_bot\">Water Used This Week</p>\n                    </div>\n                  </div>  \n                </div> \n                <div className=\"body_box regular\">\n                  <div className=\"box_content stat_box\">\n                    {trendingImage}\n                    <div className=\"data_text\">\n                      <b>{this.sign}{this.state.perc_difference}<div id=\"gal\">%</div></b> \n                      <p className=\"data_text_bot\">From Last Week</p>\n                    </div>\n                  </div>    \n                </div> \n                <div className=\"body_box full_width double_height\">\n                  <div id=\"graph_wrap\">\n                    <div id=\"graph_htmlcontainer\">\n                    <div className={classes.container}>\n                      <header>\n                        <h2>Your Usage History</h2>\n                      </header>\n                      <LineGraph\n                        data={filteredData}\n                        labels={labels} />\n                    </div>\n\n                    </div>\n                  </div>  \n                </div> \n              </div>\n            </div>\n          </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './tips.css';\nimport './globalstyle.css';\nimport logo from '../assets/svg/flow_logo.svg';\nimport dbman from '../assets/svg/dashboardimg.svg';\nimport drop from '../assets/svg/drop.svg';\nimport waterimage from '../assets/jpeg/waterimage.jpg';\n\n// Imports icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faFileAlt, faTint, faWater} from '@fortawesome/free-solid-svg-icons'\n\n// Adds icons\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faFileAlt, faTint, faWater);\n\n// Random welcome message\n\nclass Welcome extends Component {\n\n  getMsg() {\n    var msg = ['Each person uses about 80-100 gallons of water per day.', \"Plastic bottles take ~3 times as much water to produce than they can actually hold.\", \"What can you do to save our planet?\"];\n    var i = Math.floor(Math.random() * Math.floor(3));\n    return msg[i];\n  }\n\n  render() {\n    return <h3 className=\"box_text blue_box_text\">{this.getMsg()}</h3>;\n    \n  }\n}\n\nclass FactsMessage extends Component {\n\n  getMsg() {\n    var msg = ['Showering, bathing and using the toilet account for about two-thirds of the average family’s water usage.', \"A dripping faucet can lead to over 300 liters of water waste a month. That’s around 10 liters a day!\", \"In Los Angeles, around 54% of a single family’s water usage comes from landscaping and outdoor use.\"];\n    var i = Math.floor(Math.random() * Math.floor(3));\n    return msg[i];\n  }\n\n  render() {\n    return <h3 className=\"box_text blue_box_text\">{this.getMsg()}</h3>;\n  }\n}\n\nclass TipsMessage extends Component {\n\n  getMsg() {\n    var msg = ['Cutting 4 minutes from your shower can save 30 gallons of water.', \"Cutting 4 minutes from your shower can save 30 gallons of water.\", \"Cutting 4 minutes from your shower can save 30 gallons of water.\"];\n    var i = Math.floor(Math.random() * Math.floor(3));\n    return msg[i];\n  }\n\n  render() {\n    return <h2 className=\"box_text white_box_text\">{this.getMsg()}</h2>;\n  }\n}\n\nconsole.log(logo);\n\nclass Tips extends Component { \n  render() {\n    return (\n        <React.Fragment>\n          <div className=\"body\">\n            <div className=\"body_wrap\">\n              <div className=\"body_container\">\n                <div className=\"body_box_t long2_t triple_height_t\">\n                  <div className=\"box_content_t\" id=\"first_image\">\n                    {/* <img className=\"dropimg\" src={drop}/>              */}\n                  </div>  \n                </div> \n                <div className=\"body_box_t long2_t triple_height_t\" id=\"message_box_t\">\n                  <div className=\"box_content_t\">\n                    <Welcome />\n                    <FontAwesomeIcon icon=\"water\" className=\"water_icon\"/>\n                  </div>  \n                </div> \n                <div className=\"body_box_t full_width_t double_height_t\" id=\"message_box3_t\">\n                  <div className=\"box_content_t\">\n                  {/* <h2 className=\"box_text white_box_text\"> Cutting 4 minutes from your shower can save 30 gallons of water. </h2> */}\n                  <FontAwesomeIcon icon=\"lightbulb\" className=\"lightbulb_icon\"/>\n                  <TipsMessage />\n                  </div>  \n                </div> \n                <div className=\"body_box_t long3_t triple_height_t\" id=\"message_box5_t\">\n                  <div className=\"box_content_t icon_box\">\n                    <FontAwesomeIcon icon=\"tint\" className=\"fact_icon\"/>\n                    {/* <img className=\"dropimg\" src={drop}/>             */}\n                    <FactsMessage />\n                    {/* <h3 className=\"box_text blue_box_text\">Showering, bathing and using the toilet account for about two-thirds of the average family’s water usage.</h3>  */}\n                  </div>  \n                </div> \n                <div className=\"body_box_t triple_height_t\" id=\"second_image\">\n                  <div className=\"box_content_t\">\n                  <h2 className=\"box_text white_box_text\"></h2>\n                  </div>  \n                </div> \n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Tips;","//Home Page\nimport React, { Component} from 'react';\nimport Select from 'react-select';\n\nimport './about.css';\nimport './globalstyle.css';\nimport LineGraph from \"../graphdata/myLineGraph.js\";\nimport classes from \"./home.css\";\n\nlet DaysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\nlet Months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nclass About extends Component { \n  constructor() {\n    super();\n    this.state = {\n      filteredData: [],\n      labels: [],\n      startDate: 0,\n      endDate: 0,\n      selectOptions: [],\n      selectedDevices: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getAvailableUserIDs();\n  }\n\n  async getAvailableUserIDs() {\n    let xhr = new XMLHttpRequest();\n      xhr.addEventListener('load', () => {\n        let uniqueIds = JSON.parse(xhr.responseText);\n        let selectOptions = [];\n        for (let id of uniqueIds) {\n          selectOptions.push({label: `Device ${id}`, value: id});\n        }\n        this.setState({ selectOptions: selectOptions});\n      });\n      xhr.open('GET', 'http://129.146.137.152:3000/available_user_ids')\n      xhr.send();\n  }\n\n  \n  getData(idString) {\n    if (!idString) {\n      alert(\"Please select at least 1 device to view data.\");\n      return;\n    }\n    let xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      let response = JSON.parse(xhr.responseText)\n      let filteredData = [];\n      let labels = [];\n      console.log(response)\n      let keys = Object.keys(response)\n      let startDate = new Date(parseInt(keys[0], 10) * 1000);\n      let startDay = startDate.getDay();\n      let startDateString = DaysOfWeek[startDate.getDay()] + \", \" + Months[startDate.getMonth()] + \" \" + startDate.getDate();\n      let endDate = new Date(parseInt(keys[keys.length-1], 10) * 1000);\n      let endDateString = DaysOfWeek[endDate.getDay()] + \", \" + Months[endDate.getMonth()] + \" \" + endDate.getDate();\n      \n      labels = DaysOfWeek.slice(startDay, startDay + 7);\n      filteredData = Object.values(response)\n      console.log(\"labels: \" + labels);\n      console.log(\"startDate: \" + startDateString);\n      console.log(\"endDate: \" + endDateString);\n\n      this.setState({\n        filteredData: filteredData,\n        labels: labels,\n        startDate: startDateString,\n        endDate: endDateString \n      });\n    });\n\n    xhr.open('GET', `http://129.146.137.152:3000/dailysum/${idString}`);\n    xhr.send();\n  }\n\n  onSelectChange = (opt) => {\n    let ids = \"\";\n    // for (let entry of opt) {\n    //   ids.push(entry[\"value\"]);\n    // }\n    console.log(opt);\n    for (let i = 0; i < opt.length; i++) {\n      ids += opt[i][\"value\"];\n      // console.log(opt[i]);\n      if (i < opt.length - 1) {\n        ids += \"_\";\n      }\n    }\n    this.setState({selectedDevices: ids});\n  }\n\n  submitButton = () => {\n    let idString = this.state.selectedDevices;\n    this.getData(idString);\n  }\n  \n  parseDevicesSelected = () => {\n    let deviceString = this.state.selectedDevices;\n    return deviceString.replace(\"_\", \", \");\n  }\n  render() {\n    return (\n        <React.Fragment>\n          <div className=\"body\">\n            <div className=\"body_wrap\">\n              <div className=\"body_container flex_container\">\n              {/* <div className=\"body_box full_width double_height\"> */}\n                <div>\n                  <p>Please select the devices you would like to view data for.</p>\n                </div>\n                <div className=\"body_box select_menu \" id=\"message_box\">\n                  <Select \n                    isMulti\n                    onChange={this.onSelectChange}\n                    options={this.state.selectOptions}/>\n                  <button className=\"button\" onClick={this.submitButton} >\n                    Reload Graph\n                  </button>\n                </div>\n                <div id=\"graph_wrap\">\n                  <div id=\"graph_htmlcontainer\">\n                    <div className={classes.container}>\n                      <header>\n                        <h2>Your Usage History</h2>\n                      </header>\n                      <LineGraph\n                        data={this.state.filteredData}\n                        labels={this.state.labels} />\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <p>Start Date: {this.state.startDate}</p>\n                  <p>End Date: {this.state.endDate}</p>\n                  <p>Devices included (ID): {this.parseDevicesSelected()}</p>\n              </div>\n              </div> \n              \n              {/* </div> */}\n            </div>\n          </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default About;","//Home Page\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './nav.css';\nimport logo from '../assets/svg/flow_logo.svg';\n\n// Imports icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faUsers } from '@fortawesome/free-solid-svg-icons'\n\n// Adds icons\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faUsers);\n\nconsole.log(logo);\n\nclass Side_Nav extends Component { \n  render() {\n    return (\n        <React.Fragment>\n          <div className=\"nav_wrap\">\n            <div className=\"logo_wrap\">\n              <a href=\"#top\"><img src={logo}/></a>\n            </div>\n            <nav>\n              <ul className=\"nav_list\">\n                <li className=\"nav_item\">\n                  <Link className=\"nav_square\" to=\"/pages/home.js\">\n                    <FontAwesomeIcon icon=\"home\" className=\"nav_icon\"/>\n                  </Link> \n                </li>\n                <li className=\"nav_item\"> \n                  <Link className=\"nav_square\" to=\"/pages/tips.js\">\n                    <FontAwesomeIcon icon=\"lightbulb\" className=\"nav_icon\"/>\n                  </Link>\n                </li>\n                <li className=\"nav_item\"> \n                  <Link className=\"nav_square\" to=\"/pages/about.js\">\n                    <FontAwesomeIcon icon=\"users\" className=\"nav_icon\"/>\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n            </div>  \n\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Side_Nav;","//Home Page\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './nav.css';\nimport logo from '../assets/svg/flow_logo.svg';\nimport prof from '../assets/svg/Ac.svg';\n\n// Imports icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell } from '@fortawesome/free-solid-svg-icons'\n\n\n// Adds icons\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell);\n\nconsole.log(logo);\n\nclass Top_Bar extends Component { \n  render() {\n    return (\n        <React.Fragment>\n          <nav className = \"top_bar\">\n            <ul className=\"top_list\">\n              <li id=\"name\">\n                Allison Chen\n              </li>\n              <li className=\"top_item\">\n                <img src={prof} alt=\"\"/>\n              </li>\n              <li className=\"top_item\">\n                <Link to=\"/\"><FontAwesomeIcon icon=\"bell\" className=\"top_iconsa\"/></Link>\n              </li> \n            </ul>\n          </nav>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Top_Bar;","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport './App.css';\nimport logo from './assets/svg/flow_logo.svg';\n// Connect pages\nimport Home from \"./pages/home.js\"\nimport Tips from \"./pages/tips.js\"\nimport About from \"./pages/about.js\"\nimport SideNav from \"./nav/SideNav.jsx\"\nimport TopBar from \"./nav/TopBar.jsx\"\n\n// Imports icons\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\n// Adds icons\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\n\nconsole.log(logo);\n\nclass App extends Component { \n  render() {\n    return (\n      <React.Fragment>\n        <HashRouter name=\"app\" path=\"/\" handler={App} basename={process.env.PUBLIC_URL}>\n\n         <SideNav/>\n         <TopBar/>\n       \n          <Switch>\n            <Route path = \"/pages/home.js\" exact component={Home} />\n            <Route path = \"/pages/tips.js\" exact component={Tips} />\n            <Route path = \"/pages/about.js\" exact component={About} />\n          </Switch>\n          <Redirect from=\"/\" exact to=\"/pages/home.js\" />\n\n        </HashRouter>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './pages/home.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}