{"version":3,"sources":["assets/svg/flow_logo.svg","assets/svg/drop.svg","assets/svg/dashboardimg.svg","graphdata/LineGraph.module.css","firebase.js","graphdata/myLineGraph.js","pages/home.js","pages/tips.js","pages/about.js","nav/SideNav.jsx","nav/TopBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myLineChart","Chart","defaults","global","defaultFontFamily","legend","display","LineGraph","chartRef","React","createRef","buildChart","myChartRef","current","getContext","props","data","labels","average","destroy","graphHeight","canvas","height","gradientLine","createLinearGradient","addColorStop","type","datasets","label","fill","borderColor","backgroundColor","pointBackgroundColor","pointRadius","hitRadius","pointStrokeColor","plugins","zoom","pan","enabled","mode","rangeMin","x","y","rangeMax","onPan","chart","console","log","onPanComplete","options","responsive","maintainAspectRatio","tooltips","displayColors","scales","yAxes","scaleLabel","labelString","fontColor","ticks","padding","gridLines","borderDash","color","drawTicks","drawBorder","xAxes","this","className","classes","graphContainer","id","ref","Component","library","add","faHome","faSignal","faClock","faLightbulb","faQuestionCircle","faUserCircle","Welcome","Math","floor","random","getMsg","logo","dayLabels","monthLabels","Home","filteredData","startDate","daily_sums","state","chartData","charDays","dayNames","i","checkDate","Date","checkDateUnix","getTime","endDate","setUTCFullYear","getUTCFullYear","setUTCMonth","getUTCMonth","setUTCDate","getDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","endDateUnix","getDay","getMonth","getFullYear","setDate","getUTCDate","setState","componentDidMount","gal_used","lastDay","dataRef","database","on","snapshot","timestamp","vol","date","noon_timestamp","time_in_unix_ms","forEach","childSnapshot","key","child","val","setTime","lastSevenDays","weekly_usage","volume","Fragment","src","dbman","drop","container","Tips","About","Side_Nav","href","class","to","icon","faBell","Top_Bar","App","SideNav","TopBar","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a185848.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flow_logo.134cada3.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop.3005f19c.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboardimg.e16f80f0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"LineGraph_graphContainer__TE_fs\",\"chartjs-render-monitor\":\"LineGraph_chartjs-render-monitor___0Xwc\"};","import firebase from 'firebase';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyBKlHtX6_JuKxIEROcVcC0oUKwFbwj_UpI\",\r\n//   authDomain: \"react-50f71.firebaseapp.com\",\r\n//   databaseURL: \"https://react-50f71.firebaseio.com\",\r\n//   projectId: \"react-50f71\",\r\n//   storageBucket: \"react-50f71.appspot.com\",\r\n//   messagingSenderId: \"898138328086\",\r\n//   appId: \"1:898138328086:web:0bdb6a856278a46e02b937\",\r\n//   measurementId: \"G-D35GFWXVY5\"\r\n// };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBa97q4DWj7xsO4DWtFyEJQaSD4Cv-QcbA\",\r\n  authDomain: \"testproj-81eb3.firebaseapp.com\",\r\n  databaseURL: \"https://testproj-81eb3.firebaseio.com\",\r\n  projectId: \"testproj-81eb3\",\r\n  storageBucket: \"testproj-81eb3.appspot.com\",\r\n  messagingSenderId: \"326625281759\",\r\n  appId: \"1:326625281759:web:7dfdd060c65ab5ff604b6a\",\r\n  measurementId: \"G-VS469K15HM\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nimport classes from \"./LineGraph.module.css\";\r\nlet myLineChart;\r\n\r\n//--Chart Style Options--//\r\nChart.defaults.global.defaultFontFamily = \"'Open Sans', sans-serif\"\r\nChart.defaults.global.legend.display = false;\r\n//--Chart Style Options--//\r\n\r\n\r\nexport default class LineGraph extends Component {\r\n    chartRef = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        this.buildChart();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildChart();\r\n    }\r\n\r\n    buildChart = () => {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const { data, average, labels } = this.props;\r\n\r\n        if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\r\n        const {height: graphHeight} = myChartRef.canvas;\r\n\r\n        let gradientLine = myChartRef\r\n        .createLinearGradient(0, 0, 0, graphHeight);\r\n        gradientLine.addColorStop(0, \"rgb(151, 209, 244, .5)\");\r\n        gradientLine.addColorStop(0.5, \"rgb(151, 209, 244, .1)\");\r\n        gradientLine.addColorStop(1, \"rgb(151, 209, 244, 0)\");\r\n\r\n        myLineChart = new Chart(myChartRef, {\r\n            \r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"Volume\",\r\n                        data: data,\r\n                        fill: true,\r\n                        borderColor: \"#97D1F4\",\r\n                        backgroundColor: gradientLine,\r\n                        pointBackgroundColor: \"#97D1F4\",\r\n                        pointRadius: 3,\r\n                        hitRadius: 30,\r\n                        pointStrokeColor: \"#fff\"\r\n                    }\r\n                ]\r\n            },\r\n            plugins: {\r\n                zoom: {\r\n                    // Container for pan options\r\n                    pan: {\r\n                        // Boolean to enable panning\r\n                        enabled: true,\r\n            \r\n                        // Panning directions. Remove the appropriate direction to disable\r\n                        // Eg. 'y' would only allow panning in the y direction\r\n                        // A function that is called as the user is panning and returns the\r\n                        // available directions can also be used:\r\n                        //   mode: function({ chart }) {\r\n                        //     return 'xy';\r\n                        //   },\r\n                        mode: 'xy',\r\n            \r\n                        rangeMin: {\r\n                            // Format of min pan range depends on scale type\r\n                            x: null,\r\n                            y: null\r\n                        },\r\n                        rangeMax: {\r\n                            // Format of max pan range depends on scale type\r\n                            x: null,\r\n                            y: null\r\n                        },\r\n            \r\n                        // Function called while the user is panning\r\n                        onPan: function({chart}) { console.log(`I'm panning!!!`); },\r\n                        // Function called once panning is completed\r\n                        onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\r\n                    }\r\n                }\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    displayColors: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Volume (ml)',\r\n                        fontColor: '#d1d1d1',\r\n                      },\r\n                      ticks: {\r\n                        padding: 10,\r\n                        fontColor: '#d1d1d1'\r\n                      },\r\n                      gridLines: {\r\n                        display: false,\r\n                        borderDash: [8,4],\r\n                        color: '#eeeeee',\r\n                        drawTicks: false,\r\n                        drawBorder: false\r\n                      }\r\n\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            borderDash: [8,4],\r\n                            color: '#eeeeee',\r\n                            drawTicks: false,\r\n                            drawBorder: false                               \r\n                        },\r\n                        ticks: {\r\n                            padding: 10,\r\n                            fontColor: '#d1d1d1'\r\n                          }\r\n                    }]\r\n                  },\r\n\r\n            },\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            \r\n            <div className={classes.graphContainer}>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './home.css';\r\nimport './globalstyle.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\nimport firebase from \"../firebase\"\r\nimport dbman from '../assets/svg/dashboardimg.svg';\r\nimport drop from '../assets/svg/drop.svg';\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport LineGraph from \"../graphdata/myLineGraph.js\";\r\nimport classes from \"./home.css\";\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\n// Random welcome message\r\n\r\nclass Welcome extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Howdy!', \"Welcome to Flow!\", \"Save Water!\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n\r\n  render() {\r\n    return <h2>{this.getMsg()}</h2>;\r\n  }\r\n}\r\n\r\nconsole.log(logo);\r\n\r\nlet dayLabels = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nlet monthLabels = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      daily_sums: {}, //timestamp:sum\r\n      volume: 0,\r\n      filteredData: [],\r\n      labels: [], //dayLabels\r\n      weekly_usage: 0,\r\n    }\r\n  }\r\n  \r\n  filteredData = (startDate) => {\r\n    let daily_sums = this.state.daily_sums;\r\n    console.log(\"DATA BEING PASSED AS PROPS:\")\r\n    console.log(daily_sums);\r\n    let chartData = [];\r\n    let charDays = [];\r\n    let dayNames = dayLabels;\r\n    let i = 0;\r\n    console.log(\"startDate\" + startDate);\r\n    let checkDate = new Date(startDate);\r\n    let checkDateUnix = checkDate.getTime()\r\n    let endDate = new Date(); \r\n    endDate.setUTCFullYear(startDate.getUTCFullYear());\r\n    endDate.setUTCMonth(startDate.getUTCMonth());\r\n    endDate.setUTCDate(startDate.getDate()+7);\r\n    endDate.setUTCHours(12);\r\n    endDate.setUTCMinutes(0);\r\n    endDate.setUTCSeconds(0);\r\n    endDate.setUTCMilliseconds(0);\r\n    console.log(\"endDate\" + endDate);\r\n    let endDateUnix = endDate.getTime();\r\n    while(checkDateUnix <= endDateUnix) {\r\n        charDays[i] = dayNames[checkDate.getDay()] + \" \" + monthLabels[checkDate.getMonth()] + \" \" + checkDate.getDate() + \", \" + checkDate.getFullYear();\r\n\r\n        if (checkDateUnix in daily_sums) {\r\n            chartData[i] = daily_sums[checkDateUnix];\r\n        }\r\n        else {\r\n            chartData[i] = 0;\r\n        }\r\n        i++;\r\n        checkDate.setDate(checkDate.getUTCDate() + 1);\r\n        checkDateUnix = checkDate.getTime();\r\n      }\r\n    this.setState({\r\n        filteredData: chartData,\r\n        labels: charDays\r\n    })\r\n  }\r\n\r\n  // getWeeklyWaterUsage = (startDate, endDate) =>\r\n  // {\r\n  //   let daily_sums = this.state.daily_sums;\r\n  //   let gal_used = 0;\r\n  //   let startDateUnix = startDate.getTime();\r\n\r\n  //   while(startDateUnix <= endDate.getTime()) {     \r\n  //     gal_used += daily_sums[startDateUnix];\r\n      \r\n  //     startDate.setDate(startDate.getUTCDate() + 1);\r\n  //     startDateUnix = startDate.getTime();\r\n  //   }\r\n\r\n  //   this.setState({weekly_usage: gal_used});    \r\n  // }\r\n\r\n  componentDidMount = () => {\r\n    let gal_used = 0;\r\n    let lastDay = new Date(0);\r\n\r\n    let db = firebase.database();\r\n    let dataRef = db.ref('water_data');\r\n    let daily_sums = this.state.daily_sums;\r\n\r\n    dataRef.on('value', snapshot => {\r\n      const data = snapshot; //testing    \r\n      let timestamp;\r\n      let vol;\r\n      let date;\r\n      let noon_timestamp;\r\n      let time_in_unix_ms;\r\n      //each cxhild snapshot is an entry from arduino\r\n      data.forEach(childSnapshot => {\r\n        timestamp = childSnapshot.key*1000; //s to ms\r\n        vol = childSnapshot.child('volume').val();\r\n        gal_used += vol;\r\n        date = new Date();\r\n        date.setTime(timestamp);\r\n\r\n        //Month: starting from 0 (Jan) -> ex. 4 is May\r\n        //new Date set the time to PST -> 4 am PST -> 12 pm UTC\r\n        noon_timestamp = new Date();\r\n        noon_timestamp.setUTCFullYear(date.getUTCFullYear());\r\n        noon_timestamp.setUTCMonth(date.getUTCMonth());\r\n        noon_timestamp.setUTCDate(date.getUTCDate());\r\n        noon_timestamp.setUTCHours(12);\r\n        noon_timestamp.setUTCMinutes(0);\r\n        noon_timestamp.setUTCSeconds(0);\r\n        noon_timestamp.setUTCMilliseconds(0);\r\n\r\n        if(noon_timestamp > lastDay)\r\n          lastDay = noon_timestamp;\r\n\r\n        time_in_unix_ms = noon_timestamp.getTime()\r\n\r\n        if (time_in_unix_ms in daily_sums) {\r\n          daily_sums[time_in_unix_ms] += vol;\r\n        } else {\r\n          daily_sums[time_in_unix_ms] = vol;\r\n        }\r\n      })\r\n\r\n      let lastSevenDays =  new Date();\r\n      lastSevenDays.setUTCFullYear(lastDay.getUTCFullYear());\r\n      lastSevenDays.setUTCMonth(lastDay.getUTCMonth());\r\n      lastSevenDays.setUTCDate(lastDay.getUTCDate()-7);\r\n      lastSevenDays.setUTCHours(12);\r\n      lastSevenDays.setUTCMinutes(0);\r\n      lastSevenDays.setUTCSeconds(0);\r\n      lastSevenDays.setUTCMilliseconds(0);\r\n\r\n      this.filteredData(lastSevenDays);\r\n      \r\n      this.setState({weekly_usage: gal_used}); \r\n    \r\n    })\r\n\r\n  }\r\n  render() {\r\n    console.log(this.state.daily_sums);\r\n    const { filteredData, labels } = this.state;\r\n\r\n    return (\r\n      \r\n        <React.Fragment>\r\n          \r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                <div className=\"body_box long\" id=\"message_box\">\r\n                  <div className=\"box_content\">\r\n                    <Welcome />\r\n                      <img className=\"dbimg\" src={dbman}/>\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box regular\">\r\n                  <div className=\"box_content stat_box\">\r\n                    <img className=\"dropimg\" src={drop}/> \r\n                    <div className=\"data_text\">\r\n                      <b>{this.state.weekly_usage} gal</b> \r\n                      <p className=\"data_text_bot\">Total Water Usage</p>\r\n                    </div>\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box regular\">\r\n                  <div className=\"box_content\">\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box full_width double_height\">\r\n                  <div id=\"graph_wrap\">\r\n                    <div id=\"graph_htmlcontainer\">\r\n                      \r\n                    <div className={classes.container}>\r\n                      <header>\r\n                        <h2>Your Usage History</h2>\r\n                      </header>\r\n                      <LineGraph\r\n                        data={filteredData}\r\n                        labels={labels} />\r\n                    </div>\r\n\r\n                    </div>\r\n                  </div>  \r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './tips.css';\r\nimport './globalstyle.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\nimport dbman from '../assets/svg/dashboardimg.svg';\r\nimport drop from '../assets/svg/drop.svg';\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\n// Random welcome message\r\n\r\nclass Welcome extends Component {\r\n\r\n  getMsg() {\r\n    var msg = ['Time to save water!', \"Every drop has an impact.\", \"What can you do to save our planet?\"];\r\n    var i = Math.floor(Math.random() * Math.floor(3));\r\n    return msg[i];\r\n  }\r\n\r\n  render() {\r\n    return <h2>{this.getMsg()}</h2>;\r\n  }\r\n}\r\n\r\nconsole.log(logo);\r\n\r\nclass Tips extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                <div className=\"body_box\" id=\"message_box_t\">\r\n                  <div className=\"box_content_t\">\r\n                    <Welcome />\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t long_t\">\r\n                  <div className=\"box_content_t\">\r\n                    <img className=\"dropimg\" src={drop}/>                 \r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t full_width_t\" id=\"message_box3_t\">\r\n                  <div className=\"box_content_t\">\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box long_t\" id=\"message_box5_t\">\r\n                  <div className=\"box_content_t\">\r\n                  </div>  \r\n                </div> \r\n                <div className=\"body_box_t\">\r\n                  <div className=\"box_content_t\">\r\n                  </div>  \r\n                </div> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tips;","//Home Page\r\nimport React, { Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './about.css';\r\nimport './globalstyle.css';\r\n\r\nclass About extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"body\">\r\n            <div className=\"body_wrap\">\r\n              <div className=\"body_container\">\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass Side_Nav extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"nav_wrap\">\r\n            <div className=\"logo_wrap\">\r\n              <a href=\"#top\"><img src={logo}/></a>\r\n            </div>\r\n            <nav>\r\n              <ul className=\"nav_list\">\r\n                <li className=\"nav_item\">\r\n                  <Link class=\"nav_square\" to=\"/pages/home.js\">\r\n                    <FontAwesomeIcon icon=\"home\" className=\"nav_icon\"/>\r\n                  </Link> \r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/pages/tips.js\">\r\n                    <FontAwesomeIcon icon=\"lightbulb\" className=\"nav_icon\"/>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav_item\"> \r\n                  <Link class=\"nav_square\" to=\"/pages/about.js\">\r\n                    <FontAwesomeIcon icon=\"question-circle\" className=\"nav_icon\"/>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            </div>  \r\n\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Side_Nav;","//Home Page\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './nav.css';\r\nimport logo from '../assets/svg/flow_logo.svg';\r\n\r\n// Imports icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle, faBell);\r\n\r\nconsole.log(logo);\r\n\r\nclass Top_Bar extends Component { \r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <nav className = \"top_bar\">\r\n          \r\n          <ul className=\"top_list\">\r\n            <li className=\"top_item\">\r\n                  <a> AC </a>\r\n            </li>\r\n\r\n                \r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"user-circle\" className=\"top_icons\"/></Link>\r\n                </li>\r\n                <li className=\"top_item\">\r\n                  <Link to=\"/\"><FontAwesomeIcon icon=\"bell\" className=\"top_iconsa\"/></Link>\r\n                </li>\r\n              \r\n          </ul>\r\n        </nav>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top_Bar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport logo from './assets/svg/flow_logo.svg';\r\n// Connect pages\r\nimport Home from \"./pages/home.js\"\r\nimport Tips from \"./pages/tips.js\"\r\nimport About from \"./pages/about.js\"\r\nimport SideNav from \"./nav/SideNav.jsx\"\r\nimport TopBar from \"./nav/TopBar.jsx\"\r\n\r\n// Imports icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n// Adds icons\r\nlibrary.add(faHome, faSignal, faClock, faLightbulb, faQuestionCircle, faUserCircle);\r\n\r\nconsole.log(logo);\r\n\r\nclass App extends Component { \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BrowserRouter>\r\n\r\n         <SideNav/>\r\n         <TopBar/>\r\n       \r\n          <Switch>\r\n            <Route path = \"/pages/home.js\" exact component={Home} />\r\n            <Route path = \"/pages/tips.js\" exact component={Tips} />\r\n            <Route path = \"/pages/about.js\" exact component={About} />\r\n          </Switch>\r\n          </BrowserRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}